                        Описание spf4wc.

  spf4wc  является  попыткой создать более удобную  среду для экспериментов
с фортом, чем  стандартная консоль  Windows.  Возможно, в  далеком будущем,
spf4wc перерастет в полноценную IDE (но это вряд ли).

  Реакция на клавиатуру:
  Up-arrow  -  курсор   перемещается   на   последнюю   строку  консоли. Ее
содержимое  меняется  на  предыдущую  строку  из буфера последних введенных
команд;
  Down-arrow  -  курсор   перемещается  на   последнюю  строку  консоли. Ее
содержимое  меняется  на  следующую   строку  из буфера последних введенных
команд;
  Если нажат Shift - up и down работают как в обычном редакторе;
  Esc - последняя строка очищается;
  Enter - если  курсор  находится  в  последней строке, то из нее убирается
промпт  и она передается accept'у. Если текущая строка не последняя, то она
сначала  целиком  копируется в последнюю (вместе с промптом - если он в ней
был) и затем передается accept'у.

  Положение и размер окна программы при выходе сохраняются в ini-файле. Там
же сохраняются текущие настройки case-чувствительности и лога.

  Кроме  окна  -  командной  строки  в  spf4wc  есть  окно - мини-редактор.
Переключение между окнами  Ctrl+TAB. Команда RunScript запускает содержимое
редактора на выполнение.

  spf4wc  пошел  по  пути  монстроидации   -   в  него  включено  множество
потенциально полезных либ. Для пущего удобства.
  Включены либы:
  Ассемблер, дизассемблер,  плавающая точка,  клиент автоматизации,  список
словарей (vocs), str2.
  api-func - избавляет от необходимости объявлять используемые API-функции.
Т.е.  можно  просто писать имя нужной вин-функции, а spf4wc сам найдет ее в
подключенных  dll'ках.  По  умолчанию подключены - user32, kernel32, gdi32,
comdlg32, comctl32.
  4interp - управляющие структуры, работающие в режиме интерпретации.
  comments  -  стандартный многострочный комментарий никуда не годится, так
что я решил использовать комментарий ruvim'а - (* *).

  Сразу после запуска spf4wc пытается загрузить файл с константами.

  Переопределен  SLITERAL - в режиме  интерпретации строки, введенные через
S" text",  копируются  в  динамическую  память  и  остаются  там  навсегда.
Утечка памяти конечно, но зато никуда не пропадают.

                                              Андрей Филаткин
