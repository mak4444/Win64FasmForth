2c2,8
< ;include 'macro_align_pad.inc'        ; macros for align and pad
---
> include 'macro/if.inc'
> 
> ;include 'equates\gdi32.inc'
> CLEARTYPE_QUALITY = 5
> IDM_NEW   = 101
> IDM_EXIT  = 102
> IDM_ABOUT = 901
5c11
< ; executable at 10000h
---
> ;stack 1000000h                ; stack size
6a13,14
> ; executable at 10000h
> cfa_img_org:
11d18
< 
20,35d26
< 
< close_and_message_and_exit:
< 	mov	rbx,rax		; save RAX
< 	mov	rdi,qword [file_handle]
< 	mov	eax,0 ;sys_close
< 	syscall
< 	mov	rax,rbx		; restore RAX
< 
< message_and_exit:
< ;	call	wzts_std
< 
< 	mov	edi,1		; exit code 1
< 	mov	eax,0 ;sys_exit
< 	syscall
< 
< 
38d28
< 
42,44c32,35
< 	DD	F_CFA  and  0FFFFFFFFH
< 	DD	FLAG
< 	DD	LastNFA and 0FFFFFFFFH
---
> 	align 8
> 	DQ	F_CFA
> 	DQ	FLAG
> 	DQ	LastNFA
53,55c44,47
< 	DD	cfa_#F_CFA and 0FFFFFFFFH
< 	DD	FLAG
< 	DD	LastNFA and 0FFFFFFFFH
---
> 	align 8
> 	DQ	cfa_#F_CFA
> 	DQ	FLAG
> 	DQ	LastNFA
64,66c56,59
< 	DD	cfa_#F_CFA and 0FFFFFFFFH
< 	DD	FLAG
< 	DD	LastNFA and 0FFFFFFFFH
---
> 	align 8
> 	DQ	cfa_#F_CFA and 0FFFFFFFFH
> 	DQ	FLAG
> 	DQ	LastNFA and 0FFFFFFFFH
115,123d107
< cfa_AHEADER 0,"ATST",ATST
<         mov     edx,msg_size    ; CPU zero extends 32-bit operation to 64-bit
<                                 ; we can use less bytes than in case mov rdx,...
<         lea     rsi,[msg]
<         mov     edi,1           ; STDOUT
<         mov     eax,1           ; sys_write
<         syscall
< 	ret
< 
128,134d111
< ;0000000000408232 | 31 FF                    | xor edi,edi                             |
< ;0000000000408234 | 48 83 EC 20              | sub rsp,20                              |
< ;0000000000408238 | 48 C7 C1 00 00 00 00     | mov rcx,0                               |
< ;000000000040823F | FF 15 6B 8E 10 00        | call qword ptr ds:[<&RtlExitUserProcess |
< ;0000000000408245 | 48 83 C4 20              | add rsp,20                              |
< ;0000000000408249 | 59                       | pop rcx                                 |
< 
255,256c232,233
<      	db 8bh,55h,00             ;	mov    0x0(%rbp),%edx
<      	db 01h,10h                ;	add    %edx,(%rax)
---
>      	db 48h,8bh,55h,00          ;	mov    0x0(%rbp),%rdx
> 	add	[rax], rdx
636a614,619
> 
> cfa_AHEADER 0,"DUP>R",DUPgreatR
>      	db 5bh                  ;	pop    %rbx
>      	db 50h                  ;	push   %rax
>      	db 0ffh,0e3h               ;	jmpq   *%rbx
> 
694,696c677,681
<      	db 74h,03               ; b62:	je     b67 <cdr1>
<      	db 8bh,40h,0fch          ;  b64:	mov    -0x4(%rax),%eax
<      	ret   
---
> 	je     @f
>      	MOV    EAX,[EAX-8]
> ;     	db 8bh,40h,0fch          ;  b64:	mov    -0x4(%rax),%eax
> @@:    	ret
> 
698c683,684
<      	db 8bh,40h,0f4h             ;	mov    -0xc(%rax),%eax
---
>      	MOV RAX,  [RAX-8*3]
> ;     	db 8bh,40h,0f4h             ;	mov    -0xc(%rax),%eax
701c687
<      	LEA    EAX,[EAX-0cH]
---
>      	LEA    EAX,[EAX-8*3]
704c690,691
<      	db 48h,8dh,40h,0f8h         ;	lea    -0x8(%rax),%rax
---
>      	LEA    EAX,[EAX-8*2]
> ;     	db 48h,8dh,40h,0f8h         ;	lea    -0x8(%rax),%rax
874a862,867
> cfa_AHEADER 0,"QVECT-CODE",QVECTminusCODE
>  call cfa__QVALUEminusCODE
>  DD	0
>  call cfa__QTOVALUEminusCODE
>  DQ	cfa__QVECTminusCODE
> 
945a939,945
> 
> 
> cfa_AHEADER 0,"_QVECT-CODE",_QVECTminusCODE
>     	db 5bh                  ;	pop    %rbx
>     	mov    rbx,[rbx+9]
>     	db 0ffh,0e3h               ;	jmpq   *%rbx
> 
953a954
> 
957a959
> 
1108a1111,1128
> cfa_AHEADER 0,'ORG-ADDR',ORGminusADDR
>  call cfa__QVALUEminusCODE
>  DD 0
>  call cfa__QTOVALUEminusCODE
>  Dq cfa_img_org
> 
> cfa_AHEADER 0,'DBG_CURFILE',DBG_CURFILE
>  call cfa__QVALUEminusCODE
>  DD 0
>  call cfa__QTOVALUEminusCODE
>  Dq 0
> 
> cfa_AHEADER 0,'INCLUDED',INCLUDED
>  call cfa__QVECTminusCODE
>  DD 0
>  call cfa__QTOVALUEminusCODE
>  Dq cfa_INCLUDED_
> 
1116,1128d1135
< ;000000000040953E | 48 83 EC 30              | sub rsp,30                                     |
< ;0000000000409542 | 48 89 C1                 | mov rcx,rax                                    |
< ;0000000000409545 | 48 8B 55 08              | mov rdx,qword ptr ss:[rbp+8]                   | rdx:EntryPoint
< ;0000000000409549 | 4C 8B 45 00              | mov r8,qword ptr ss:[rbp]                      |
< ;000000000040954D | 49 C7 C1 68 0B 51 00     | mov r9,fasmforth64.510B68                      |
< ;0000000000409554 | 48 C7 44 24 20 00 00 00  | mov qword ptr ss:[rsp+20],0                    |
< ;000000000040955D | FF 15 95 7B 10 00        | call qword ptr ds:[<&WriteFile>]               |
< ;0000000000409563 | 48 83 C4 30              | add rsp,30                                     |
< ;0000000000409567 | 48 8D 6D 10              | lea rbp,qword ptr ss:[rbp+10]                  |
< ;000000000040956B | 48 83 E8 01              | sub rax,1                                      |
< ;000000000040956F | 48 19 C0                 | sbb rax,rax                                    |
< ;0000000000409572 | C3                       | ret                                            |
< 
1133,1142d1139
< ;0000000000409589 | 48 89 1D D8 75 10 00     | mov qword ptr ds:[510B68],rbx                  |
< ;0000000000409590 | 48 83 EC 30              | sub rsp,30                                     |
< ;0000000000409594 | 48 89 C1                 | mov rcx,rax                                    |
< ;0000000000409597 | 48 8B 55 08              | mov rdx,qword ptr ss:[rbp+8]                   | rdx:EntryPoint
< ;000000000040959B | 4C 8B 45 00              | mov r8,qword ptr ss:[rbp]                      |
< ;000000000040959F | 49 C7 C1 68 0B 51 00     | mov r9,fasmforth64.510B68                      |
< ;00000000004095A6 | 48 C7 44 24 20 00 00 00  | mov qword ptr ss:[rsp+20],0                    |
< ;00000000004095AF | FF 15 23 7B 10 00        | call qword ptr ds:[<&ReadFile>]                |
< ;00000000004095B5 | 48 83 C4 30              | add rsp,30                                     |
< 
1270c1267,1270
< cfa_AHEADER 0,'ZTYPE',ZTYPE
---
> cfa_AHEADER 0,'LOCALS_EXIT', LOCALS_EXIT ;( -- )
> ; 
> 	POP RBX
> 	ADD RSP, RBX
1272a1273,1283
> ;cfa_AHEADER 0,'ZTYPE',ZTYPE
> ;	ret
> 
> 
> 
> xcfa_API_12:
> 	push	qword [rbp+8*11]
> xcfa_API_11:
> 	push	qword [rbp+8*10]
> xcfa_API_10:
> 	push	qword [rbp+8*9]
1274,1275c1285
< 	mov	r9,[rbp+8*8]
< 	mov	[rsp+40H],r9
---
> 	push	qword [rbp+8*8]
1277,1278c1287
< 	mov	r9,[rbp+8*7]
< 	mov	[rsp+38H],r9
---
> 	push	qword [rbp+8*7]
1280,1281c1289
< 	mov	r9,[rbp+8*6]
< 	mov	[rsp+30H],r9
---
> 	push	qword [rbp+8*6]
1283,1284c1291
< 	mov	r9,[rbp+8*5]
< 	mov	[rsp+28H],r9
---
> 	push	qword [rbp+8*5]
1286,1287c1293
< 	mov	r9,[rbp+8*4]
< 	mov	[rsp+20H],r9
---
> 	push	qword [rbp+8*4]
1297,1298c1303,1311
< 	CALL	rax
< 	add	rsp,48H
---
> 	sub	rsp,$20
> 	jmp	rbx
> 
> 
> cfa_AHEADER 0,'XAPI_12',XAPI_12
> 	lea	rbx,[@f]
> 	jmp	xcfa_API_12
> @@:	CALL	rax
> 	add	rsp,$60 
1301,1302c1314,1315
< cfa_API_9:
< 	sub	rsp,48H
---
> cfa_AHEADER 0,'XAPI_9',XAPI_9
> 	lea	rbx,[@f]
1304,1311c1317,1322
< cfa_API_8:
< 	sub	rsp,48H
< 	jmp	xcfa_API_8
< cfa_API_7:
< 	sub	rsp,48H
< 	jmp	xcfa_API_7
< cfa_API_6:
< 	sub	rsp,48H
---
> @@:	CALL	rax
> 	add	rsp,$48
> 	retn
> 
> cfa_AHEADER 0,'XAPI_6',XAPI_6
> 	lea	rbx,[@f]
1313,1314c1324,1329
< cfa_API_5:
< 	sub	rsp,48H
---
> @@:	CALL	rax
> 	add	rsp,$30 
> 	retn
> 
> cfa_AHEADER 0,'XAPI_5',XAPI_5
> 	lea	rbx,[@f]
1316,1317c1331,1343
< cfa_API_4:
< 	sub	rsp,48H
---
> @@:	CALL	rax
> 	add	rsp,$28 
> 	retn
> 
> cfa_AHEADER 0,'XAPI_4',XAPI_4
> 	lea	rbx,[@f]
> 	jmp	xcfa_API_4
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'XAPI_3',XAPI_3
> 	lea	rbx,[@f]
1319,1323c1345,1350
< cfa_API_3:
< 	sub	rsp,48H
< 	jmp	xcfa_API_3
< cfa_API_2:
< 	sub	rsp,48H
---
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'XAPI_2',XAPI_2
> 	lea	rbx,[@f]
1325,1328c1352,1358
< cfa_API_1:
< 	sub	rsp,48H
< 	jmp	xcfa_API_1
< cfa_API_0:
---
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'XAPI_1',XAPI_1
> 	sub	rsp,$20
> 	mov	rcx,[rbp]
1329a1360
> 	add	rsp,$20 
1332,1341c1363,1524
< cfa_AHEADERP 0,'API_0',API_0
< cfa_AHEADERP 0,'API_1',API_1
< cfa_AHEADERP 0,'API_2',API_2
< cfa_AHEADERP 0,'API_3',API_3
< cfa_AHEADERP 0,'API_4',API_4
< cfa_AHEADERP 0,'API_5',API_5
< cfa_AHEADERP 0,'API_6',API_6
< cfa_AHEADERP 0,'API_7',API_7
< cfa_AHEADERP 0,'API_8',API_8
< cfa_AHEADERP 0,'API_9',API_9
---
> cfa_AHEADER 0,'XAPI_0',XAPI_0
> 	sub	rsp,$20
> 	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> ycfa_API_12:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_11:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_10:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_9:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_8:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_7:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_6:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_5:
> 	push	qword [rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_4:
> 	mov	r9,[rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_3:
> 	mov	r8,[rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_2:
> 	mov	rdx,[rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_1:
> 	mov	rcx,[rbp]
> 	lea	rbp,[rbp+8]
> ycfa_API_0:
> 	sub	rsp,$20
> 	jmp	rbx
> 
> 
> cfa_AHEADER 0,'YAPI_12',YAPI_12
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_12
> @@:	CALL	rax
> 	add	rsp,$60 
> 	retn
> 
> 
> cfa_AHEADER 0,'YAPI_6',YAPI_6
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_6
> @@:	CALL	rax
> 	add	rsp,$30 
> 	retn
> 
> cfa_AHEADER 0,'YAPI_5',YAPI_5
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_5
> @@:	CALL	rax
> 	add	rsp,$28 
> 	retn
> 
> cfa_AHEADER 0,'YAPI_4',YAPI_4
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_4
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'YAPI_3',YAPI_3
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_4
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'YAPI_2',YAPI_2
> 	lea	rbx,[@f]
> 	jmp	ycfa_API_2
> @@:	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> cfa_AHEADER 0,'YAPI_1',YAPI_1
> 	mov	rcx,[rbp]
> 	lea	rbp,[rbp+8]
> 	sub	rsp,$20
> 	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> 
> cfa_AHEADER 0,'YAPI_0',YAPI_0
> 	sub	rsp,$20
> 	CALL	rax
> 	add	rsp,$20 
> 	retn
> 
> 
> cfa_AHEADER 0,'WAPI_12',WAPI_12
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_12
> @@:	CALL	cfa_YAPI_12
> 	RET
> 
> cfa_AHEADER 0,'WAPI_6',WAPI_6
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_6
> @@:	CALL	cfa_YAPI_6
> 	RET
> 
> 
> cfa_AHEADER 0,'WAPI_5',WAPI_5
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_5
> @@:	CALL	cfa_YAPI_5
> 	RET
> 
> cfa_AHEADER 0,'WAPI_4',WAPI_4
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_4
> @@:	CALL	cfa_YAPI_4
> 	RET
> 
> cfa_AHEADER 0,'WAPI_3',WAPI_3
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_3
> @@:	CALL	cfa_YAPI_3
> 	RET
> 
> cfa_AHEADER 0,'WAPI_2',WAPI_2
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_2
> @@:	CALL	cfa_YAPI_2
> 	RET
> 
> cfa_AHEADER 0,'WAPI_1',WAPI_1
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_1
> @@:	CALL	cfa_YAPI_1
> 	RET
> 
> cfa_AHEADER 0,'WAPI_0',WAPI_0
> 	mov	rcx ,rsp
> 	and	rcx ,$f
> 	JZ	cfa_YAPI_0
> @@:	CALL	cfa_YAPI_0
> 	RET
1344a1528,1531
> 	mov	rbx, rsp
> 	and     rbx, 0fh
> 	jz	@f
> 	lea	rsp,[rsp-8]
1345a1533,1535
> 	lea	rsp,[rsp+8]
> 	retn
> @@:	invoke	LoadLibrary,RAX
1364a1555
> 	mov	rax , r14
1786c1977
< cfa_AHEADER 0,'TSRART',TSRART
---
> cfa_AHEADER 0,'TSTART',TSTART
1789a1981,1999
> cfa_AHEADER 0,'PARAM',PARAM
>       	LEA	RBP, [RBP-32]
>       	MOV	[RBP+24], rax
> 	mov     [RBP+16], rcx
> 	mov     [RBP+8], rdx
> 	mov     [RBP],  r8
> 	mov     rax, r9 
>      ret
> 
> 
> cfa_AHEADER 0,'MARAP',MARAP
> 	mov     r9 , rax
> 	mov     r8 , [RBP]
> 	mov     rdx , [RBP+8]
> 	mov     rcx , [RBP+16]
>       	MOV	rax , [RBP+24]
>       	LEA	RBP, [RBP+32]
>      ret
> 
1864c2074
< 	Dq LastNFA  and 0FFFFFFFFH		; 
---
> 	Dq LastNFA		; 
1876,1890d2085
< msg_err00	db	'Error create file!',0Ah,7,0
< msg_err01	db	'Error seek in file!',0Ah,7,0
< msg_err02	db	'Error close file!',0Ah,7,0
< msg_err03	db	'Error sys_mmap!',0Ah,7,0
< 
< filename	db	'text.txt',0
< 
< TSTDLL_ADR	dq	0
< TSTDLL_ID	dq	0
< 
< msg db 'Hello 64-bit world!',0xA
< msg_size = $-msg
< 
< 
< input_size		rq	1
1901a2097
> 
1904c2100,2107
<   library kernel32,'KERNEL32.DLL'
---
>   library kernel32,'KERNEL32.DLL',\
> 	user32,'USER32.DLL',\
>           Comdlg32,'COMDLG32.DLL',\
> 	  gdi32,'GDI32.DLL'
> 
> import Comdlg32,\
>          GetOpenFileNameA,'GetOpenFileNameA',\
>          GetSaveFileNameA,'GetSaveFileNameA'
1906a2110,2111
>   include 'api/user32.inc'
>   include 'api/gdi32.inc'
